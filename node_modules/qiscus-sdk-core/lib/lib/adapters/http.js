"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _superagent = _interopRequireDefault(require("superagent"));

var HttpAdapter = /*#__PURE__*/function () {
  function HttpAdapter(_ref) {
    var baseURL = _ref.baseURL,
        AppId = _ref.AppId,
        userId = _ref.userId,
        version = _ref.version,
        getCustomHeader = _ref.getCustomHeader;
    (0, _classCallCheck2["default"])(this, HttpAdapter);
    this.baseURL = baseURL;
    this.token = null;
    this.userId = userId;
    this.AppId = AppId;
    this.version = version;
    this.getCustomHeader = getCustomHeader;
  }

  (0, _createClass2["default"])(HttpAdapter, [{
    key: "setToken",
    value: function setToken(token) {
      this.token = token;
    }
  }, {
    key: "get",
    value: function get(path) {
      var _this = this;

      var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var options = arguments.length > 2 ? arguments[2] : undefined;
      return new Promise(function (resolve, reject) {
        var req = _superagent["default"].get("".concat(_this.baseURL, "/").concat(path));

        if (options && options.baseURL) req = _superagent["default"].get("".concat(options.baseURL, "/").concat(path));
        req = _this.setupHeaders(req, headers);
        req.end(function (err, res) {
          if (err) {
            _this._rethrowIfExpiredToken(err);

            return reject(err);
          }

          return resolve(res);
        });
      });
    } // eslint-disable-next-line

  }, {
    key: "get_request",
    value: function get_request(path) {
      var req = _superagent["default"].get("".concat(this.baseURL, "/").concat(path));

      req = this.setupHeaders(req, {});
      return req;
    }
  }, {
    key: "post",
    value: function post(path) {
      var _this2 = this;

      var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return new Promise(function (resolve, reject) {
        var req = _superagent["default"].post("".concat(_this2.baseURL, "/").concat(path));

        req = _this2.setupHeaders(req, headers);
        req.send(body).set("Content-Type", "application/x-www-form-urlencoded").end(function (err, res) {
          if (err) {
            _this2._rethrowIfExpiredToken(err);

            return reject(err);
          }

          return resolve(res);
        });
      });
    } // eslint-disable-next-line

  }, {
    key: "post_json",
    value: function post_json(path) {
      var _this3 = this;

      var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return new Promise(function (resolve, reject) {
        var req = _superagent["default"].post("".concat(_this3.baseURL, "/").concat(path));

        req = _this3.setupHeaders(req, headers);
        req.send(body).set("Content-Type", "application/json").end(function (err, res) {
          if (err) {
            _this3._rethrowIfExpiredToken(err);

            return reject(err);
          }

          return resolve(res);
        });
      });
    }
  }, {
    key: "put",
    value: function put(path) {
      var _this4 = this;

      var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return new Promise(function (resolve, reject) {
        var req = _superagent["default"].put("".concat(_this4.baseURL, "/").concat(path));

        req = _this4.setupHeaders(req, headers);
        req.send(body).set("Content-Type", "application/x-www-form-urlencoded").end(function (err, res) {
          if (err) {
            _this4._rethrowIfExpiredToken(err);

            return reject(err);
          }

          return resolve(res);
        });
      });
    }
  }, {
    key: "patch",
    value: function patch(path) {
      var _this5 = this;

      var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return new Promise(function (resolve, reject) {
        var req = _superagent["default"].patch("".concat(_this5.baseURL, "/").concat(path));

        req = _this5.setupHeaders(req, headers);
        req.send(body).set("Content-Type", "application/x-www-form-urlencoded").end(function (err, res) {
          if (err) {
            _this5._rethrowIfExpiredToken(err);

            return reject(err);
          }

          return resolve(res);
        });
      });
    }
  }, {
    key: "del",
    value: function del(path) {
      var _this6 = this;

      var body = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return new Promise(function (resolve, reject) {
        var req = _superagent["default"].del("".concat(_this6.baseURL, "/").concat(path));

        req = _this6.setupHeaders(req, headers);
        req.send(body).set("Content-Type", "application/json").end(function (err, res) {
          if (err) {
            _this6._rethrowIfExpiredToken(err);

            return reject(err);
          }

          return resolve(res);
        });
      });
    }
  }, {
    key: "setupHeaders",
    value: function setupHeaders(req) {
      var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      // let's give this default Authorization Header
      if (this.AppId != null) {
        req.set("QISCUS-SDK-APP-ID", "".concat(this.AppId));
      }

      if (this.userId != null) {
        req.set("QISCUS-SDK-USER-ID", "".concat(this.userId));
      }

      if (this.token != null) {
        req.set("QISCUS-SDK-TOKEN", "".concat(this.token));
      }

      if (this.version != null) {
        req.set("QISCUS-SDK-VERSION", "".concat(this.version));
      }

      if (this.getCustomHeader != null) {
        var customHeaders = this.getCustomHeader();
        Object.keys(customHeaders).filter(function (key) {
          return customHeaders[key] != null;
        }).forEach(function (key) {
          req.set(key, customHeaders[key]);
        });
      } // Return the req if no headers attached


      if (Object.keys(headers).length < 1) return req; // now let's process custom header

      for (var key in headers) {
        if (headers.hasOwnProperty(key)) req.set(key, headers[key]);
      }

      return req;
    }
  }, {
    key: "_rethrowIfExpiredToken",
    value: function _rethrowIfExpiredToken(err) {
      var _err$response, _err$response2, _body$error, _body$error$message;

      var status = (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status;
      var body = (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.body;

      if (status === 403 && ((_body$error = body.error) === null || _body$error === void 0 ? void 0 : (_body$error$message = _body$error.message) === null || _body$error$message === void 0 ? void 0 : _body$error$message.toLowerCase()) === 'unauthorized. token is expired') {
        throw new Error('Token expired');
      }
    }
  }]);
  return HttpAdapter;
}();

exports["default"] = HttpAdapter;
module.exports = exports.default;