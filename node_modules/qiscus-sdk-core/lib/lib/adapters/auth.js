"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var AuthAdapter = /*#__PURE__*/function () {
  /**
   * Params used in this class
   * @method constructor
   * @param  {Object}    HTTPAdapter [Qiscus HTTP adapter]
   * @return {void}                Returns nothing
   */
  function AuthAdapter(HTTPAdapter) {
    (0, _classCallCheck2["default"])(this, AuthAdapter);
    this.HTTPAdapter = HTTPAdapter;
    this.refreshToken = null;
    this.userId = null;
    this.autoRefreshToken = false;
  }

  (0, _createClass2["default"])(AuthAdapter, [{
    key: "getNonce",
    value: function getNonce() {
      return this.HTTPAdapter.post('api/v2/sdk/auth/nonce').then(function (res) {
        return res.body.results;
      });
    }
  }, {
    key: "loginOrRegister",
    value: function loginOrRegister(params) {
      var _this = this;

      return this.HTTPAdapter.post('api/v2/sdk/login_or_register', params).then(function (resp) {
        if (resp.body.status !== 200) return Promise.reject(resp);
        var result = resp.body.results;
        _this.userId = result.user.email;
        _this.refreshToken = result.user.refresh_token;
        return result;
      });
    }
  }, {
    key: "verifyIdentityToken",
    value: function verifyIdentityToken(token) {
      var _this2 = this;

      return this.HTTPAdapter.post('api/v2/sdk/auth/verify_identity_token', {
        identity_token: token
      }).then(function (resp) {
        var result = resp.body.results;
        _this2.userId = result.user.email;
        _this2.refreshToken = result.user.refresh_token;
        return result;
      });
    }
  }, {
    key: "refreshAuthToken",
    value: function refreshAuthToken() {
      var _this3 = this;

      return this.HTTPAdapter.post('api/v2/sdk/refresh_user_token', {
        user_id: this.userId,
        refresh_token: this.refreshToken
      }).then(function (r) {
        var res = r.body.results;
        _this3.refreshToken = res.refresh_token;
        _this3.HTTPAdapter.token = res.token;
        return res;
      });
    }
  }, {
    key: "expiredAuthToken",
    value: function expiredAuthToken() {
      return this.HTTPAdapter.post("api/v2/sdk/expire_user_token", {
        user_id: this.userId
      }).then(function (r) {
        return r.body.results;
      });
    }
  }]);
  return AuthAdapter;
}();

exports["default"] = AuthAdapter;
module.exports = exports.default;